<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.healthcareplatform</groupId>
    <artifactId>healthcare-semantic-database-platform</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    
    <name>Healthcare Semantic Database Platform</name>
    <description>Enterprise Healthcare Semantic Database Platform with Vector DB, Big Data, and AWS Cloud Integration</description>
    <url>https://github.com/shibam-max/healthcare-semantic-database-platform</url>

    <developers>
        <developer>
            <id>shibam-max</id>
            <name>Shibam Samaddar</name>
            <email>shibam@healthcareplatform.com</email>
            <roles>
                <role>Senior Java Developer</role>
                <role>Healthcare Technology Specialist</role>
            </roles>
        </developer>
    </developers>

    <properties>
        <java.version>23</java.version>
        <maven.compiler.source>23</maven.compiler.source>
        <maven.compiler.target>23</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Spring Framework -->
        <spring-boot.version>3.4.1</spring-boot.version>
        <spring-cloud.version>2024.0.0</spring-cloud.version>
        <spring-ai.version>1.0.0-M4</spring-ai.version>
        
        <!-- Database Technologies -->
        <postgresql.version>42.7.4</postgresql.version>
        <pgvector.version>0.1.4</pgvector.version>
        <mongodb.version>4.11.1</mongodb.version>
        <redis.version>5.0.2</redis.version>
        
        <!-- Big Data Stack -->
        <kafka.version>3.6.1</kafka.version>
        <spark.version>3.5.0</spark.version>
        <elasticsearch.version>8.11.0</elasticsearch.version>
        <hadoop.version>3.3.6</hadoop.version>
        
        <!-- AWS Cloud Services -->
        <aws-sdk.version>2.29.15</aws-sdk.version>
        <aws-lambda.version>1.2.3</aws-lambda.version>
        
        <!-- Monitoring & Observability -->
        <micrometer.version>1.14.2</micrometer.version>
        <opentelemetry.version>1.46.0</opentelemetry.version>
        <prometheus.version>0.16.0</prometheus.version>
        
        <!-- Security & Authentication -->
        <keycloak.version>23.0.3</keycloak.version>
        <oauth2.version>6.4.2</oauth2.version>
        
        <!-- Testing Framework -->
        <junit.version>5.10.1</junit.version>
        <testcontainers.version>1.20.4</testcontainers.version>
        <mockito.version>5.8.0</mockito.version>
        
        <!-- Build Tools -->
        <maven-compiler.version>3.13.0</maven-compiler.version>
        <maven-surefire.version>3.2.5</maven-surefire.version>
        <jacoco.version>0.8.11</jacoco.version>
    </properties>

    <modules>
        <module>shared</module>
        <module>microservices</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot BOM -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <!-- Spring Cloud BOM -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <!-- AWS SDK BOM -->
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${aws-sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <!-- TestContainers BOM -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <!-- OpenTelemetry BOM -->
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>${opentelemetry.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Spring Boot Plugin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>
                
                <!-- Maven Compiler Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <parameters>true</parameters>
                        <compilerArgs>
                            <arg>--enable-preview</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                
                <!-- Surefire Plugin for Unit Tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire.version}</version>
                    <configuration>
                        <argLine>--enable-preview</argLine>
                    </configuration>
                </plugin>
                
                <!-- Failsafe Plugin for Integration Tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-surefire.version}</version>
                    <configuration>
                        <argLine>--enable-preview</argLine>
                    </configuration>
                </plugin>
                
                <!-- JaCoCo Code Coverage -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <!-- JaCoCo for all modules -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Docker Build Profile -->
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>1.4.13</version>
                        <configuration>
                            <repository>healthcare-platform/${project.artifactId}</repository>
                            <tag>${project.version}</tag>
                            <buildArgs>
                                <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Performance Testing Profile -->
        <profile>
            <id>performance</id>
            <properties>
                <maven.test.skip>false</maven.test.skip>
                <performance.tests>true</performance.tests>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.lazerycode.jmeter</groupId>
                        <artifactId>jmeter-maven-plugin</artifactId>
                        <version>3.7.0</version>
                        <executions>
                            <execution>
                                <id>performance-tests</id>
                                <goals>
                                    <goal>jmeter</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Production Profile -->
        <profile>
            <id>production</id>
            <properties>
                <spring.profiles.active>production</spring.profiles.active>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <jvmArguments>
                                -Xms8g -Xmx16g
                                -XX:+UseG1GC
                                -XX:MaxGCPauseMillis=100
                                -XX:+UseStringDeduplication
                                -XX:+OptimizeStringConcat
                            </jvmArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>